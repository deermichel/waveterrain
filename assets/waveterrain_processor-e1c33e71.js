var g=Object.defineProperty;var P=(n,h,s)=>h in n?g(n,h,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[h]=s;var r=(n,h,s)=>(P(n,typeof h!="symbol"?h+"":h,s),s);(function(){"use strict";const d=class{evaluate(t,e){const{centerX:u,centerZ:a,radiusX:i,radiusZ:o,freqX:c,freqZ:f,phaseShift:V}={...d.defaultParams,...e};for(;t<0;)t+=1;for(;t>=1;)t-=1;const X=u+i*Math.sin(d.twoPi*c*t+V),Z=a+o*Math.sin(d.twoPi*f*t);return{x:X,z:Z}}};let n=d;r(n,"twoPi",2*Math.PI),r(n,"defaultParams",{centerX:0,centerZ:0,radiusX:1,radiusZ:1,freqX:1,freqZ:1,phaseShift:Math.PI/2});class h{evaluate(t,e){for(;t<-1;)t+=2;for(;t>=1;)t-=2;for(;e<-1;)e+=2;for(;e>=1;)e-=2;return(t-e)*(t-1)*(t+1)*(e-1)*(e+1)}}class s{constructor(t,e=.001,u=.001){r(this,"internal");r(this,"target");r(this,"momentum");r(this,"eps");this.internal=t,this.target=t,this.momentum=e,this.eps=u}get value(){return this.internal}set value(t){this.target=t}tick(){return Math.abs(this.internal-this.target)<this.eps?this.internal=this.target:this.internal=this.momentum*this.target+(1-this.momentum)*this.internal,this.internal}}const m=(p,t,e,u,a)=>u+(a-u)*(p-t)/(e-t),w=p=>440*Math.pow(2,(p-69)/12);class l extends AudioWorkletProcessor{constructor(){super();r(this,"terrainProvider");r(this,"orbitProvider");r(this,"phase",0);r(this,"oscFreq",new s(w(l.parameterDescriptors[0].defaultValue)));r(this,"centerX",new s(l.parameterDescriptors[1].defaultValue));r(this,"centerZ",new s(l.parameterDescriptors[2].defaultValue));r(this,"radiusX",new s(l.parameterDescriptors[3].defaultValue));r(this,"radiusZ",new s(l.parameterDescriptors[4].defaultValue));r(this,"freqX",new s(l.parameterDescriptors[5].defaultValue));r(this,"freqZ",new s(l.parameterDescriptors[6].defaultValue));r(this,"phaseShift",new s(l.parameterDescriptors[7].defaultValue));this.terrainProvider=new h,this.orbitProvider=new n,this.port.onmessage=this.onMessage.bind(this)}static get parameterDescriptors(){return[{name:"oscNote",defaultValue:48,minValue:0,maxValue:127},{name:"centerX",defaultValue:0,minValue:-1,maxValue:1},{name:"centerZ",defaultValue:0,minValue:-1,maxValue:1},{name:"radiusX",defaultValue:1,minValue:0,maxValue:2},{name:"radiusZ",defaultValue:1,minValue:0,maxValue:2},{name:"freqX",defaultValue:1,minValue:0,maxValue:8},{name:"freqZ",defaultValue:1,minValue:0,maxValue:8},{name:"phaseShift",defaultValue:Math.PI/2,minValue:0,maxValue:2*Math.PI}]}process(e,u,a){const i=u[0],o=i.length,c=o>0?i[0].length:0;this.oscFreq.value=w(a.oscNote[0]),this.centerX.value=a.centerX[0],this.centerZ.value=a.centerZ[0],this.radiusX.value=a.radiusX[0],this.radiusZ.value=a.radiusZ[0],this.freqX.value=a.freqX[0],this.freqZ.value=a.freqZ[0],this.phaseShift.value=a.phaseShift[0];for(let f=0;f<c;f++){const V={centerX:this.centerX.tick(),centerZ:this.centerZ.tick(),radiusX:this.radiusX.tick(),radiusZ:this.radiusZ.tick(),freqX:this.freqX.tick(),freqZ:this.freqZ.tick(),phaseShift:this.phaseShift.tick()},{x:X,z:Z}=this.orbitProvider.evaluate(this.phase,V),v=this.terrainProvider.evaluate(X,Z);for(let q=0;q<o;q++)i[q][f]=v;this.phase+=this.oscFreq.tick()/sampleRate,this.phase%=1}return!0}onMessage(e){e.data.type==="getTerrain"?this.getTerrain(e.data.segments):e.data.type==="getOrbit"&&this.getOrbit(e.data.segments)}getTerrain(e){const u=new Float32Array(e*e);for(let a=0;a<e;a++)for(let i=0;i<e;i++){const o=m(a,0,e,-1,1),c=m(i,0,e,-1,1);u[a*e+i]=this.terrainProvider.evaluate(o,c)}this.port.postMessage({type:"terrain",terrain:u})}getOrbit(e){const u={centerX:this.centerX.value,centerZ:this.centerZ.value,radiusX:this.radiusX.value,radiusZ:this.radiusZ.value,freqX:this.freqX.value,freqZ:this.freqZ.value,phaseShift:this.phaseShift.value},a=new Float32Array(e*2);for(let i=0;i<e;i++){const o=m(i,0,e,0,1),{x:c,z:f}=this.orbitProvider.evaluate(o,u);a[i*2+0]=c,a[i*2+1]=f}this.port.postMessage({type:"orbit",orbit:a})}}registerProcessor("waveterrain_processor",l)})();
